name: Release

on:
  release:
    types: [published]

jobs:
  distribution:
    name: Distribution Linux
    runs-on: ubuntu-latest
    container: dynawo/dynawo-distribution-cxx11:latest
    env:
      DYNAWO_CXX11_ENABLED: YES
      DYNAWO_RESULTS_SHOW: "false"
      DYNAWO_BUILD_TYPE: Release
      DYNAWO_NB_PROCESSORS_USED: 2
      DYNAWO_FORCE_CXX11_ABI: "true"
      DYNAWO_VERSION: 1.3.0
      GH_API_DYNAWO: ${{ github.api_url }}/repos/${{ github.repository_owner }}/dynawo
      CURL_JSON: 'curl --silent --header "Content-Type": "application/json"'

    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Fetch Dynawo
        run: |
          source .github/workflows/tools.sh
          download_asset $GH_API_DYNAWO v${DYNAWO_VERSION} Dynawo_headers_V${DYNAWO_VERSION}.zip

      - name: Unzip Dynawo
        run: |
          unzip "Dynawo_headers_V${DYNAWO_VERSION}.zip"

      - name: Build
        run: |
          export DYNAWO_HOME=$(pwd)/dynawo
          export DYNAWO_ALGORITHMS_HOME=$(pwd)
          util/envDynawoAlgorithms.sh build
          util/envDynawoAlgorithms.sh distrib
          util/envDynawoAlgorithms.sh distrib-headers
          version=$(util/envDynawoAlgorithms.sh version | cut -f1 -d' ')
          curl -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: application/zip" -X POST $(curl -s --request GET https://api.github.com/repos/dynawo/dynawo-algorithms/releases/latest | grep upload_url | cut -d '"' -f 4 | grep -o ".*assets")?name=DynawoAlgorithms_Linux_v${version}.zip --data-binary @distributions/DynawoAlgorithms_V${version}.zip
          curl -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: application/zip" -X POST $(curl -s --request GET https://api.github.com/repos/dynawo/dynawo-algorithms/releases/latest | grep upload_url | cut -d '"' -f 4 | grep -o ".*assets")?name=DynawoAlgorithms_Linux_headers_v${version}.zip --data-binary @distributions/DynawoAlgorithms_headers_V${version}.zip
